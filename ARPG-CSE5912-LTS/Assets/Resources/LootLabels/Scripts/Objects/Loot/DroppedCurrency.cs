using UnityEngine;

namespace LootLabels {
    /// <summary>
    /// Inherited class from dropped loot containing logic for currency that's dropped on the floor
    /// </summary>
    public class DroppedCurrency : DroppedLoot {

        public int manualValue;     //manual currency value if not generated by lootgenerator
        [SerializeField] PlayerMoney playerMoney;
        [HideInInspector]
        public BaseCurrency currency;   //reference to instance of currency class

        private void Start() {
            if (Premade) {
                currency = new BaseCurrency(CurrencyTypes.Gold, manualValue, ResourceManager.singleton.GetModelName(CurrencyTypes.Gold), ResourceManager.singleton.GetIconName(CurrencyTypes.Gold));
            }

            CreateLabel();
        }
        private void OnTriggerEnter(Collider other)
        {
            if (other.tag == "Player")
            {
                playerMoney.addMoney(currency.CurrencyValue);
            }
            Destroy(this.gameObject);
        }
        /// <summary>
        /// Creates the label!!
        /// Called in animator or in start when there is no animator
        /// </summary>
        public override void SpawnLabel() {
            GetComponent<EventHandler>().ClearDelegates();
            GetComponent<EventHandler>().SubscribeMouseEvents(MouseDownFunction, MouseEnterFunction, MouseExitFunction);

            if (currency != null) {
                GetComponent<CreateLabel>().SpawnLabelByColor(currency.ItemName, currency.IconName);
            }
            else {
                Debug.Log("Turn on testing in the dropped loot script or assign currency on instantiate");
            }

            StartCoroutine(GetComponent<EventHandler>().VisibilityCoroutine());
        }

        //What currency should do when you loot it
        void AddCurrency() {
            if (currency.CurrencyType == CurrencyTypes.Gold) {
                //Do what you need to do with gold here before destroying
                //Example: PlayerReference.addGold(currencyValue);
                Debug.Log("add " + currency.CurrencyValue + " gold to player");
            }
        }

        //Object specific logic on mouse down
        public override void MouseDownFunction() {
            AddCurrency();
            DestroyMesh();  //build in pool
        }

        //Object specific logic on mouse enter
        public override void MouseEnterFunction() {
            GetComponent<ObjectHighlight>().HighlightObject();
        }

        //Object specific logic on mouse exit
        public override void MouseExitFunction() {
            GetComponent<ObjectHighlight>().StopHighlightObject();
        }
    }
}